geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
# geom_map(aes(map_id = FIPS, color = bins), show.legend =T, size=0,
#          map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[c(1, 25, 50, 75, 100)]) +
theme_void()  +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 16, size=3)))
legend.title <- '% White'
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[c(1, 25, 50, 75, 100)],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=4)))
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[c(1, 25, 50, 75, 100)],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 22, size=5)))
df$bins %>% table
89/inc
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = legend.text[ceiling(percents/inc)] + 1
)
20/inc
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = (legend.text[ceiling(percents/inc) + 1]) %>%
factor(levels=legend.text, ordered = T)
)
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[c(1, 25, 50, 75, 100)],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
df$var <- df[['white']]
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = (legend.text[ceiling(percents/inc)]) %>%
factor(levels=legend.text, ordered = T)
)
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[c(1, 25, 50, 75, 100)],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
legend.text <- c(paste0(min, " % or less"),
paste0(min + inc, " %"),
paste0(min + 2 * inc, " %"),
paste0(min + 3 * inc, " %"),
paste0(max, " % or more")) %>%
factor(levels=legend.text, ordered = T)
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = legend.text[ceiling(percents/inc)]
)
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[c(1, 25, 50, 75, 100)],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
legend.cut <- c(min, min + inc, min + 2 * inc, min + 3 * inc)
legend.text <- c(paste0(legend.cut[1], " % or less"),
paste0(legend.cut[2], " %"),
paste0(legend.cut[3], " %"),
paste0(legend.cut[4], " % or more")) %>%
factor(levels=legend.text, ordered = T)
?geom_point
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), stroke='grey', x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
df$var <- df[['white']]
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = legend.text[ceiling(percents/inc)]
)
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
shades[legend.cut]
legend.cut
inc <- (max - min) / 4
legend.cut <- c(min, min + inc, min + 2 * inc, min + 3 * inc)
legend.text <- c(paste0(max(1,legend.cut[1]), " % or less"),
paste0(legend.cut[2], " %"),
paste0(legend.cut[3], " %"),
paste0(legend.cut[4], " % or more")) %>%
factor(levels=legend.text, ordered = T)
shades <- colorRampPalette(c("white", "darkgreen"))(100)
df <- county_pop2015 %>% filter(age_gr=="Total")
df$var <- df[['white']]
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = legend.text[ceiling(percents/inc)]
)
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
shades[legend.cut]
shades[c(1,25,50,75)]
legend.cut
inc <- (max - min) / 4
legend.cut <- c(max(1,min), min + inc, min + 2 * inc, min + 3 * inc)
legend.text <- c(paste0(legend.cut[1], " % or less"),
paste0(legend.cut[2], " %"),
paste0(legend.cut[3], " %"),
paste0(legend.cut[4], " % or more")) %>%
factor(levels=legend.text, ordered = T)
shades <- colorRampPalette(c("white", "darkgreen"))(100)
df <- county_pop2015 %>% filter(age_gr=="Total")
df$var <- df[['white']]
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = legend.text[ceiling(percents/inc)]
)
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
legend.cut
df$bins %>% table
55/inc
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = legend.text[ceiling(percents/inc)]
)
df$bins %>% table
legend.text
legend.text <- c(paste0(legend.cut[1], " % or less"),
paste0(legend.cut[2], " %"),
paste0(legend.cut[3], " %"),
paste0(legend.cut[4], " % or more"))
legend.text
df <- county_pop2015 %>% filter(age_gr=="Total")
df$var <- df[['white']]
df <- df %>% # filter(var>=min/100, var<=max/100) %>%
dplyr::mutate(
percents = as.integer(cut(var, 100,
include.lowest = TRUE, ordered = TRUE)),
fills =  shades[percents],
bins = legend.text[ceiling(percents/inc)]
)
df$bins %>% table
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), stroke='grey', x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(alpha=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_alpha_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
alpha = guide_legend(override.aes = list(shape = 15, size=5)))
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(shape=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_shape_manual(values = shades[legend.cut],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
shape = guide_legend(override.aes = list(shape = 15, size=5)))
legend.cut
legend.cut2 <- legend.cut
legend.cut2[1] <- max(legend.cut2[1], 5)
df %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = subset(states, region %in% keep_lower_resions ),
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL, fill = legend_fill) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut2],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
load("data/df_shape_counties.RData")
keep_lower_states
keep_lower_resions
all_stfips
shape_states
load("data/df_shape_counties.RData")
shape_states <- NULL
load("data/df_shape_counties.RData")
shape_states
load("data/shape_states.RData")
load("data/shape_counties.RData")
shape_states
save(shape_states, "data/shape_states.RData")
save(shape_states, file="data/shape_states.RData")
load("data/shape_states.RData")
# exclude alaska, hawaii, puerto rico,
all_stfips <- shape_states$FIPS
all_regions <- states$region %>% unique()
keep_lower_states <- all_stfips[!(all_stfips %in% c("02","15","72"))]
keep_lower_resions <- all_regions[!(all_regions %in% c(""))]
states <- subset(states, region %in% keep_lower_resions)
df_shape_counties <- subset(df_shape_counties, STATEFP %in% keep_lower_states)
shiny::runApp()
shiny::runApp()
max
shiny::runApp()
map()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
?map_data
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
min
max
df %>% filter(!is.na(fills)) %>%
ggplot() +
geom_polygon(data =  cnty,
mapping = aes(x = long, y = lat, group = group),
colour ="gray75", size=.1, fill = NA) +
geom_map(aes(map_id = FIPS, fill = fills), show.legend =F,
map = subset(df_shape_counties, STATEFP %in% keep_lower_states)) +
geom_point(aes(color=bins), x=-90, y=37, show.legend =T, size=0) +
geom_polygon(data = states,
mapping = aes(x = long, y = lat, group = group),
colour ="white", size=.2, fill = NA) +
coord_quickmap() +
labs(y = NULL, x = NULL) +
scale_fill_manual(values = rev(shades)) +
scale_color_manual(values = shades[legend.cut2],
name=legend.title) +
theme_void()  +
theme(legend.position="bottom") +
guides(fill = "none",
color = guide_legend(override.aes = list(shape = 15, size=5)))
df$bins %>% table
df$fills %>% table
shiny::runApp()
shades
df$fills %>% table
df$percents %>% table
shiny::runApp()
shiny::runApp()
shiny::runApp()
